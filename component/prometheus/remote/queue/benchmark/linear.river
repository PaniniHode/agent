


discovery.http "disco" {
  url = env("DISCOVERY")
}


prometheus.scrape "scraper" {
    targets = concat([{"__address__" = "localhost:12349"}])
    forward_to = [prometheus.relabel.mutator.receiver]
    scrape_interval = "15s"
}


prometheus.relabel "mutator" {
    rule {
        source_labels = ["__name__"]
        regex = "(.+)"
        replacement = "linear"
        target_label = "runtype"
    }
    rule {
        source_labels = ["__name__"]
        regex = "(.+)"
       replacement = env("NAME")
               target_label = "test_name"
    }
  rule {
        source_labels = ["__name__"]
        regex = "(.+)"
        replacement = env("ALLOW_WAL")
        target_label = "remote_write_enable"
    }
     rule {
        source_labels = ["__name__"]
        regex = "(.+)"
        replacement = env("DISCOVERY")
        target_label = "discovery"
    }


rule {
       source_labels = ["__name__"]
       action = "keep"
       regex = "(process_cpu_seconds_total|go_memstats_alloc_bytes|go_gc_duration_seconds_sum|go_gc_duration_seconds_count)"
    }


    forward_to = [prometheus.remote.linear.agent_stats.receiver]
}

prometheus.remote.linear "agent_stats" {
    endpoint {
        url = "https://prometheus-us-central1.grafana.net/api/prom/push"
        basic_auth {
            username = env("PROM_USERNAME")
            password = env("PROM_PASSWORD")
        }
    }
}

prometheus.scrape "avalanche" {
    targets = discovery.http.disco.targets
    forward_to = [prometheus.remote.linear.empty.receiver]
    scrape_interval = "15s"
}

prometheus.remote.linear "empty" {
    endpoint {
        url = "http://localhost:8888/post"
    }
}


pyroscope.scrape "scrape_job_name" {
        targets    = [{"__address__" = "localhost:12349", "service_name" = "linear"}]
        forward_to = [pyroscope.write.write_job_name.receiver]

        profiling_config {
                profile.process_cpu {
                        enabled = true
                }

                profile.godeltaprof_memory {
                        enabled = true
                }



                profile.godeltaprof_mutex {
                        enabled = true
                }


                profile.godeltaprof_block {
                        enabled = true
                }



                profile.goroutine {
                        enabled = true
                }
        }
}
pyroscope.write "write_job_name" {
        endpoint {
                url = "https://profiles-prod-003.grafana.net"
                 basic_auth {
                            username = env("PYRO_USERNAME")
                            password = env("PYRO_PASSWORD")
                        }
        }
}